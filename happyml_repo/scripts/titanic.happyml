#
# Setup Notes:
#
# I used the train.csv file from https://www.kaggle.com/datasets/hesh97/titanicdataset-traincsv
#
# I stored the raw csv in the happyml_data/titanic directory. See below.
#
# My directory structure:
# happyml
#  - cmake-build-debug
#    - happyml.exe        <- my working directory
#  - happyml_repo
#    - datasets
#      - titanic          <- the destination for the binary dataset we'll make
#    - default_token_encoder
#      - default.bpe      <- the default encoder
#    - raw
#      - titanic
#        - train.csv      <- train.csv from kaggle
#    - scripts
#      - titanic.happyml  <- this script
#    - tasks
#      - predict_survivor <- the destination for the task we'll make, which will include the model we train
#
# Here's the header of the train.csv file, along with the column offsets:
# PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked
#           0,       1,     2,   3,  4,  5,    6,    7,     8,   9,   10,      11
#
# Valid Date Types can be: image, label, number, text
#
# One-liner if you wanted to run interactively:
#
# create dataset titanic with header with expected label Survived at 1 with given label Pclass at 2 with given label Sex at 4 with given number Age at 5 with given number SibSp at 6 with given number Parch at 7 with given number Fare at 9 with given label Embarked at 11 using file://../data/titanic/train.csv
#
# titanic.happyml :

create dataset titanic
       with header
       with expected label Survived at 1
       with given label    Pclass   at 2
       with given label    Sex      at 4
       with given number   Age      at 5
       with given number   SibSp    at 6
       with given number   Parch    at 7
       with given number   Fare     at 9
       with given label    Embarked at 11
       using file://../happyml_repo/raw/titanic/train.csv


print raw titanic limit 5
print pretty titanic limit 5


# example with test set:
# create task label predict_survivor with goal accuracy with test titanic_test using titanic
create task label predict_survivor using titanic

# The passenger did survive (1), let's see if we can predict that:
execute task predict_survivor using input (Pclass: "2", Sex: female, Age: 55, SibSp: 0, Parch: 0, Fare: 16, Embarked: S)
#execute task predict_survivor using dataset titanic

# Case insensitive check; should still survive (1):
execute task predict_survivor using input (pclass: "2", sex: female, age: 55, sibsp: 0, parch: 0, fare: 16, embarked: S)

# The passenger did not survive (0), let's see if we can predict that:
execute task predict_survivor using input (pclass: "3", sex: male, age: 2, sibsp: 4, parch: 1, fare: 29.125, embarked: Q)

# Invalid field "sex1" should fail:
# execute task predict_survivor using input (pclass: "3", sex1: male, age: 2, sibsp: 4, parch: 1, fare: 29.125, embarked: Q)
# missing field "sex" should fail:
# execute task predict_survivor using input (pclass: "3", age: 2, sibsp: 4, parch: 1, fare: 29.125, embarked: Q)
# No input should fail:
# execute task predict_survivor using input ()
# Completely invalid input should fail:
# execute task predict_survivor using input (spiders: "Yes")
# "ok" is not a valid pclass:
# execute task predict_survivor using input (pclass: "ok", sex: male, age: 2, sibsp: 4, parch: 1, fare: 29.125, embarked: Q)